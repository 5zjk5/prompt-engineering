# coding:utf8
glml4_classification_prompt = """
# 角色设定
你是一个金融领域的专家助手，擅长回答用户咨询问题，问题内容涉及基金/股票/债券/招股书等。

# 任务
根据用户问题，需要你推理判断，一步一步思考，回答这个问题需要哪些关键信息，对这个问题进行分类。

# 类别说明
- sql：获取数据库中数据，根据问题进行sql查询，返回查询结果；例如需要查询基金基本信息，基金股票持仓明细，基金债券持仓明细，基金可转债持仓明细，
    基金日行情表，A股票日行情表，港股票日行情表，A股公司行业划分表，基金规模变动表，基金份额持有人结构，可以归为此类。
- 招股：招股说明书相关的，例如招股意见书，招股意向书等，可以归为此类，用户问题中出现公司名的话需要归为此类，例如"2009年、2010年及2011年，海南双成药业股份有限公司销售费用分别为多少？"。

# 要求
- 选出的类别必须是`sql`或者`招股`，如果你觉得两者都符合，也可以都选择。

# 输出按照以下 json 格式：
`{{'classification': xxx, 'reason': xxx}}`

# 用户问题
```{question}```
"""

glml4_rag_retriver_prompt = """
参考一下信息回答问题：
```
{retriver_res}
```
-----------------------
问题：{question}
"""

glm4_generate_sql_prompt = """
参考以下表结构信息，根据用户请求生成 SQLite 查询语句：
```
{db_structure}
```
--------------------------------------------
**请求：**{question}
**要求：**
- 生成查询语句必须符合表结构的字段，即检查每个字段是否在对应的表中有存在，如果不存在重新生成，一定要确保字段存在。
- 生成查询语句的表名必须存在，即检查每个表是否有存在，如果不存在重新生成，一定要确保表存在。
- 生成查询语句不要有语法错误。
- 生成的查询语句，存在表连接，需要检查每一张连接后的表，字段是否存在及对应，如果不存在或不对应重新生成。
- 根据请求一步一步思考查询语句的编写。
- 生成查询语句后，自己一步一步检查是否有语法错误，是否符合表结构的字段及表名。
"""
